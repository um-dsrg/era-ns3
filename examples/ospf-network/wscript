## -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

import os
import sys

# Setting the location for the LEMON library depending on the OS
if sys.platform.startswith('darwin'):
    lemon_path = '/Users/noel/libraries/lemon/'
elif sys.platform.startswith('linux'):
    lemon_path = '/home/noel/libraries/lemon/'

# Setting Library path
lemon_lib_path = lemon_path + 'lib'

# Setting include path
lemon_inc_path = lemon_path + 'include'

def build(bld):

    # Adding the LEMON and tinyxml2 libraries
    bld.read_stlib('emon', paths=[lemon_lib_path])
    bld.read_shlib('tinyxml2')
    bld.read_shlib('glpk')

    def set_properties(obj):
        # Adding the include folders
        obj.includes = ['#', lemon_inc_path]
        # Adding the LEMON and GLPK libraries together with the ns-3 dependencies
        obj.use = obj.ns3_module_dependencies + ['emon', 'glpk', 'tinyxml2']
        obj.install_path = None

    all_modules = [mod[len("ns3-"):] for mod in bld.env['NS3_ENABLED_MODULES']]
    obj = bld.create_ns3_program('ospf-network', all_modules)
    obj.source = ['ospf-network.cc',
                  '../multipath-mcf/custom-bridge/custom-bridge-net-device.cc',
                  '../multipath-mcf/custom-bridge/custom-bridge-helper.cc',
                  '../multipath-mcf/custom-bridge/custom-bridge-channel.cc',
                  '../multipath-mcf/classes/routing-table.cc',
                  '../multipath-mcf/classes/graph-utilities.cc',
                  '../multipath-mcf/classes/commodity-utilities.cc',
                  '../multipath-mcf/classes/commodity-properties.cc',
                  '../multipath-mcf/classes/simulation-configurator.cc',
                  '../multipath-mcf/classes/xml-file-handler.cc',
                  '../multipath-mcf/classes/log-manager.cc',
                  '../multipath-mcf/classes/result-manager.cc']
    set_properties(obj)
