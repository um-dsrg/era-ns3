def build(bld):
    def set_properties(obj):
        obj.use = obj.ns3_module_dependencies
        obj.install_path = None

    all_modules = [mod[len("ns3-"):] for mod in bld.env['NS3_ENABLED_MODULES']]
    obj = bld.create_ns3_program('multipath_routing', all_modules)
    obj.source = ['multipath-routing.cc',
                  'src/flow.cc',
                  'src/mptcp-header.cc',
                  'src/flow-monitor.cc',
                  'src/routing-helper.cc',
                  'src/topology-builder.cc',
                  'src/results-container.cc',
                  'src/random-generator-manager.cc']
    # Device
    obj.source.extend(['src/device/custom-device.cc'])

    # Terminal
    obj.source.extend(['src/device/terminal/terminal.cc'])

    # Switch
    obj.source.extend(['src/device/switch/buffer.cc',
                       'src/device/switch/sdn-switch.cc',
                       'src/device/switch/switch-base.cc',
                       'src/device/switch/ppfs-switch.cc',
                       'src/device/switch/receive-buffer.cc',
                       'src/device/switch/transmit-buffer.cc',
                       'src/device/switch/switch-container.cc'])
    # Application
    obj.source.extend(['src/application/app-container.cc',
                       'src/application/application-base.cc',
                       'src/application/multipath-receiver.cc',
                       'src/application/unipath-transmitter.cc',
                       'src/application/unipath-receiver.cc',
                       'src/application/multipath-transmitter.cc'])

    obj.env.append_value('LIB', ['tinyxml2'])  # Adding the tinyxml2 library
    set_properties(obj)
